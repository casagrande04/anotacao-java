SISTEMA: Conjunto de componentes interligados que gera, coleta, processa e distribui informações.

BANCO DE DADOS: Bancos de dados ou bases de dados são sistemas para armazenar informações que se relacionam de forma a criar um sentido. O banco de dados é considerado o principal componente do projeto.

SGDB: SGDB ou Sistema de Gerenciamento de Banco de Dados é a ferramenta usada para gerenciar o banco de dados.

DADOS: Dados são conteúdos armazenados no Servidor de Banco de Dados. O banco de dados pode armazenar texto, números, imagens, bídeos etc.

INFORMAÇÕES: Informações são obtidas à partir do processamento dos dados armazenados no servidor.

exemplo: 
mouse (12,50 a unidade)
pen drive (20,00 a unidade)
HD externo (220,00 a unidade)

Processamento dos dados:
mouse: 2 x 12,50 = 25,00
pen drive: 2 x 20,00 = 40,00
HD externo: 220,00
Ttoal da compra: (25,00 + 40,00 + 220,00) = 285,00
Troco = (300,00 - 285,00) = 15,00

> OR = ( 3 OPERAÇÕES)
< ( 1 OPERAÇÃO)

TIPOS:
Modelo Relacional:
ER (Entidade Relacionamento)
SQL (Linguagem de Consulta Estruturada)

Modelo Não Relacional
NOSQL (Not Only SQL) = MongoDB

SERVIDOR:
Rede Local: Sistemas para comércio de bens e serviços
Cloud: Sistemas para WEB (E-Commerce)

--------------------------------------------------------------------------------

Formato de cabeçálho universal
/**
*Agenda de contatos
*@author Eduardo Casagrande de Sá 
*/


EXECUTAR OS SEGUINTES COMANDOS = ctrl + enter
-- comentários em linha (mySQL)
-- exibir os bancos
show databases;

-- apagar um banco de dados
drop database dbagenda;

-- criar um banco de dados
create database dbagenda;

-- selecionar o banco de dados a ser trabalhado
use dbagenda;

-- exibir tabelas do banco de dados
show tables;

-- criando uma tabela no banco de dados                              parenteses serve pra acrescentar um argumento no campo
-- primary key (chave primário)
-- auto_increment (numeração automática)
-- varchar (tipo de dados: String)
-- not null (campo obrigatório)

create table contatos(
	id int primary key auto_increment,
	nome varchar(30) not null,
	fone varchar(15) not null,
    email varchar(50)
);

-- descrever a tabela
describe contatos;

-- selecionar tudo da tabela
select * from contatos;

-- CRUD CREATE
insert into contatos (nome,fone,email) values ('Eduardo Casagrande de Sá','11982651468','edu.casagrande@hotmail.com');
insert into contatos (nome,fone) values ('Bill Gates', '11940028922');
insert into contatos (nome, fone) values ('Abílio Pinto', '999998888');
insert into contatos (nome, fone, email) values ('Alexandre Manhoso', '988881111','memesjonson@gmail.com' );
insert into contatos (nome, fone) values ('Marcelo do Pastel', '922226666');
insert into contatos (nome, fone, email) value ('Maurélio Junior', '966667777','ocaradomeme@gmail.com');
insert into contatos (nome, fone) value ('Astolfo Negão', '900002222');
insert into contatos (nome, fone, email) value ('Adson Miséria', '987651234', 'galinha@gmail.com');
insert into contatos (nome, fone) value ('Marcinho da esquina', '916371902');
insert into contatos (nome, fone) value ('Maricas Mário', '912673526');

-- simulando um erro
insert into contatos (nome, email) values ('robson vaaaaaaaaaaaaamonde', 'vava@linux.com');
insert into contatos (nome, fone, email) values ('professor ramos', '961726354', 'professorramos@gmail.com');

-- CRUD READ
-- selecionar tudo da tabela
select * from contatos;

-- selecionar e ordenar
select * from contatos order by nome;
select * from contatos order by nome desc;

-- pesquisas avançadas
select nome from contatos;
select nome,email from contatos;
select * from contatos where nome like 'a%';
select * from contatos where nome = "Abílio Pinto";
select * from contatos where id = 1;

-- CRUD UPDATE ------------------------------------------
-- CUIDADO !!! (Sempre usar a cláusula where)
update contatos set fone = '999998888' where id =1;
update contatos set fone = '91111110000',email= 'margarinafeliz@gmail.com' where id = 2;
update contatos set nome = 'Willian Gates', fone = '50 900006666', email= 'bill@outlook.com' where id = 2;
update contatos set email = 'abilio@gmail.com' where id = 5;
update contatos set email = 'marcelo@gmail.com' where id = 7;
update contatos set email = 'marcinho@gmail.com' where id = 11;
update contatos set fone= '912345678', email = 'mario@gmail.com' where id = 12;
update contatos set email = 'negao@gmail.com' where id = 14;

-- CRUD DELETE
-- CUIDADO !!! (Sempre usar a cláusula where junto com a chave primaria)

delete from contatos where id = 15;

-- Alterações na estrutura tabela ----------------------------------------

-- adicionar uma coluna a tabela
alter table contatos add column obs varchar(100);

-- adicionar uma coluna após um local específico
alter table contatos add column fone2 varchar(15) not null after fone;

describe contatos;
select * from contatos;

-- alterando tipo de dados ou validações
-- ATENÇÃO aos dados já cadastrados!

alter table contatos modify fone2 varchar (20);

describe contatos;

-- Excluir uma coluna
alter table contatos drop column obs;

-- Excluir a tabela
drop table contatos;
select * from contatos;


database na barra de acesso-> engenharia reversa-> salvar como PDF 

ECLIPSE: 
help
  eclipseMarketPlace
    pesquisar "window builder"
      instalar o primeiro

Dicas: <ctrl><shift.<f> alinha o código
Métodos no Java:(código que pode ser reutilizado)
Para criar um método (função) simples usamos a palavra "void", seguido do nome do método:
Exemplo: private void limparCampos() {}

Backup / restore (projeto Java - Eclipse)

Backup:
1) Pasta workspace:
2) Copiar a pasta inteira do projeto

Restore:
1) Copiar a pasta do projeto para o workspace
2) No eclipse: 
	File -> Import -> General -> Expandir a pasta -> Existing projects into workspace -> Select root directory [browse] -> selecionar o workspace -> Selecionar o projeto a ser importado

CRUD - Create, Read, Update, Delete

